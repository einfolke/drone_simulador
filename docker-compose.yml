version: "3.9"
services:
  db:
    image: postgres:16
    container_name: drones_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./seed.sql:/docker-entrypoint-initdb.d/02-seed.sql

  java-api:
    build:
      context: .
      dockerfile: Dockerfile.java
    environment:
      API_PORT: 8080
      JDBC_URL: jdbc:postgresql://db:5432/${POSTGRES_DB}
      JDBC_USER: ${POSTGRES_USER}
      JDBC_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db
    ports:
      - "8080:8080"

  node-api:
    build:
      context: .
      dockerfile: Dockerfile.node
    environment:
      PORT: 3000
      POSTGRES_HOST: db
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      JAVA_API_URL: http://java-api:8080
    depends_on:
      - db
      - java-api
    ports:
      - "3000:3000"

volumes:
  dbdata:
